version: "3"

services:
  db:
    # container_name: cblock-db
    restart: unless-stopped
    image: postgres:14.0
    env_file: ./.env
    volumes:
      - ./.docker/postgres-data:/var/lib/postgresql/data
    networks:
      cblock-network:
  redis:
    # container_name: redis
    image: redis:5.0
    env_file: .env
    restart: unless-stopped
    volumes:
      - ./.docker/redis-data:/data
    #    ports:
    #      - "6379"
    networks:
      cblock-network:
  web:
    # container_name: web
    restart: unless-stopped
    image: "${GITHUB_IMAGE_NAME}:${GITHUB_BUILD_BRANCH}"
    build:
      context: .
      dockerfile: Dockerfile
    env_file: ./.env
    ports:
      - "${DOCKER_EXPOSE_PORT}:${DJANGO_PORT}"
    depends_on:
      - db
    volumes:
      - ./:/code/
      - ./static/:/code/static/
    command: /runserver.sh
    networks:
      cblock-network:
  scanner:
    # container_name: scanner
    restart: unless-stopped
    image: "${GITHUB_IMAGE_NAME}:${GITHUB_BUILD_BRANCH}"
    build:
      context: .
      dockerfile: Dockerfile
    env_file: ./.env
    depends_on:
      - db
      - redis
    volumes:
      - ./:/code/
      - ./scanner_logs/:/code/scanner_logs/
    command: ["python", "scanner/start.py"]
    networks:
      cblock-network:
  dramatiq:
    # container_name: dramatiq
    restart: unless-stopped
    image: "${GITHUB_IMAGE_NAME}:${GITHUB_BUILD_BRANCH}"
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    depends_on:
      - db
      - redis
    volumes:
      - .:/code
    command: python manage.py rundramatiq
    networks:
      cblock-network:
  scheduler:
    # container_name: scheduler
    restart: unless-stopped
    image: "${GITHUB_IMAGE_NAME}:${GITHUB_BUILD_BRANCH}"
    env_file: .env
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - db
      - redis
    volumes:
      - .:/code
    command: python manage.py run_scheduler
    networks:
      cblock-network:
networks:
  cblock-network:
