version: "3"

services:
  db:
    image: postgres:14.0
    env_file: ./.env
    volumes:
      - ./.docker/postgres-data:/var/lib/postgresql/data
    networks:
      wish-net:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: ./.env
    ports:
      - "${DOCKER_EXPOSE_PORT}:${DJANGO_PORT}"
    depends_on:
      - db
    volumes:
      - ./:/code/
      - ./static/:/code/static/
    command: python manage.py runserver 0.0.0.0:${DJANGO_PORT}
    restart: unless-stopped
    networks:
      wish-net:
  scanner:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: ./.env
    depends_on:
      - db
      - redis
    restart: unless-stopped
    volumes:
      - ./:/code/
    command: ["python", "scanner/start.py"]
    networks:
      wish-net:
  redis:
    image: redis:5.0
    env_file: .env
    restart: unless-stopped
    volumes:
      - ./.docker/redis-data:/data
    ports:
      - "6379"
    networks:
      wish-net:
  celery:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    image: celery:3.1
    command: "celery -A mywish2 worker -l info"
    depends_on:
      - redis
    environment:
      CELERY_BROKER_URL: redis://redis:6379/
      CELERY_RESULT_BACKEND: redis://redis:6379/
    restart: always
    networks:
      wish-net:
  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    image: celery:3.1
    command: "celery -A mywish2 beat -l info"
    depends_on:
      - redis
    environment:
      CELERY_BROKER_URL: redis://redis:6379/
      CELERY_RESULT_BACKEND: redis://redis:6379/
    restart: always
    networks:
      wish-net:
  flower:
    build: .
    command: "celery -A mywish2 flower --loglevel=info --broker=redis://redis:6379/"
    env_file: .env
    volumes:
      - ./:/data
    ports:
      - ${FLOWER_PORT}:${FLOWER_PORT}
    environment:
      CELERY_BROKER_URL: redis://redis:6379/
      CELERY_RESULT_BACKEND: redis://redis:6379/
    networks:
      wish-net:
networks:
  wish-net:
